{"version":3,"sources":["components/stripe-button/stripe-button.component.jsx","components/checkout-item/checkout-item.component.jsx","pages/checkout/checkout.component.jsx"],"names":["price","priceForStripe","onToken","token","a","axios","post","amount","alert","console","log","label","name","billingAddress","shippingAddress","description","panelLabel","stripeKey","image","CheckoutItem","cartItem","dispatch","useDispatch","imageUrl","quantity","deleteItem","item","deleteCartItem","addItem","addCartItem","removeItem","removeCartItem","className","alt","src","id","onClick","CheckoutComponent","useSelector","createStructuredSelector","cartItems","selecterCartItems","total","selecterCartItemsTotalCount","map"],"mappings":"2PAKe,cAAqB,IAAVA,EAAS,EAATA,MAGlBC,EAAyB,IAARD,EACjBE,EAAO,uCAAG,WAAMC,GAAN,SAAAC,EAAA,+EAENC,IAAMC,KAAK,eAAgB,CAC/BH,MAAOA,EACPI,OAAQP,IAJE,OAOZQ,MAAM,oBAPM,+CASZC,QAAQC,IAAR,MATY,wDAAH,sDAab,OACE,cAAC,IAAD,CACEC,MAAM,UACNC,KAAK,UACLC,gBAAc,EACdC,iBAAe,EACfC,YAAW,yBAAoBf,GAC/BO,OAAQN,EACRe,WAAW,UACXb,MAAOD,EACPe,UAzBc,8GA0BdC,MAAM,uC,QCUGC,G,OAjCM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChBC,EAAWC,cACTC,EAAoCH,EAApCG,SAAUX,EAA0BQ,EAA1BR,KAAMZ,EAAoBoB,EAApBpB,MAAOwB,EAAaJ,EAAbI,SACvBC,EACM,SAAAC,GAAI,OAAIL,EAASM,YAAeD,KAD1BE,EAET,SAAAF,GAAI,OAAIL,EAASQ,YAAYH,KAFXI,EAGf,SAAAJ,GAAI,OAAIL,EAASU,YAAeL,KAI9C,OACE,sBAAKM,UAAU,gBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKC,IAAI,OAAOC,IAAKX,MAEvB,sBAAMS,UAAU,OAAhB,SAAwBpB,IACxB,sBAAKoB,UAAU,WAAf,UACE,sBAAMG,GAAG,cAAcH,UAAU,QAAQI,QAAS,kBAAMN,EAAWV,IAAnE,oBAGA,sBAAMY,UAAU,QAAhB,SAAyBR,IACzB,sBAAMW,GAAG,WAAWH,UAAU,QAAQI,QAAS,kBAAMR,EAAQR,IAA7D,uBAIF,sBAAMY,UAAU,QAAhB,SAAyBhC,IACzB,qBAAKgC,UAAU,gBAAgBI,QAAS,kBAAMX,EAAWL,IAAzD,yB,OCOSiB,UA/BW,WACxB,MAA6BC,YAC3BC,YAAyB,CACvBC,UAAWC,IACXC,MAAOC,OAHHH,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,MAOnB,OACE,sBAAKV,UAAU,gBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,eAAf,qBACA,qBAAKA,UAAU,eAAf,yBACA,qBAAKA,UAAU,eAAf,sBACA,qBAAKA,UAAU,eAAf,mBACA,qBAAKA,UAAU,eAAf,uBAEDQ,EAAUI,KAAI,SAAAxB,GAAQ,OACrB,cAAC,EAAD,CAAgCA,SAAUA,GAAvBA,EAASe,OAE9B,sBAAKH,UAAU,QAAf,cAAyBU,KACzB,sBAAKV,UAAU,OAAf,oBAEE,uBAFF,uDAKA,cAAC,EAAD,CAAsBhC,MAAO0C","file":"static/js/7.02b8ff80.chunk.js","sourcesContent":["import React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\n\n// 3 party payment from stripe.com\nexport default function({ price }) {\n  // your Publishable key\n  const publicKey = \"pk_test_51JY2BdSDtGDwNOCj61XZZKtLbj2ny1WelLNCHPCgxS3CIdGhajUJ612fqVJWciS4NDtP3vniQuuKbhPCXuwF8rKi00NIdF2VrT\";\n  const priceForStripe = price * 100;\n  const onToken = async token => {\n    try {\n      await axios.post(\"/api/payment\", {\n        token: token,\n        amount: price\n      });\n\n      alert(\"success payment!\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <StripeCheckout\n      label='Pay Now'\n      name='Aclothz'\n      billingAddress\n      shippingAddress\n      description={`Your total is $${price}`}\n      amount={priceForStripe}\n      panelLabel='Pay Now'\n      token={onToken}\n      stripeKey={publicKey}\n      image=\"https://i.ibb.co/92nrDWw/logo.png\"\n      />\n  );\n}\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  deleteCartItem,\n  addCartItem,\n  removeCartItem\n} from \"../../redux/cart/cart.action\";\nimport \"./checkout-item.style.scss\";\n\nconst CheckoutItem = ({ cartItem }) => {\n  const dispatch = useDispatch();\n  const { imageUrl, name, price, quantity } = cartItem;\n  const { deleteItem, addItem, removeItem } = {\n    deleteItem: item => dispatch(deleteCartItem(item)),\n    addItem: item => dispatch(addCartItem(item)),\n    removeItem: item => dispatch(removeCartItem(item))\n  };\n  \n\n  return (\n    <div className=\"checkout-item\">\n      <div className=\"image-container\">\n        <img alt=\"item\" src={imageUrl} />\n      </div>\n      <span className=\"name\">{name}</span>\n      <div className=\"quantity\">\n        <span id=\"remove-item\" className=\"arrow\" onClick={() => removeItem(cartItem)}>\n          &#10094;\n        </span>\n        <span className=\"value\">{quantity}</span>\n        <span id=\"add-item\" className=\"arrow\" onClick={() => addItem(cartItem)}>\n          &#10095;\n        </span>\n      </div>\n      <span className=\"price\">{price}</span>\n      <div className=\"remove-button\" onClick={() => deleteItem(cartItem)}>\n        &#10008;\n      </div>\n    </div>\n  );\n};\n\nexport default CheckoutItem;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport {\n  selecterCartItems,\n  selecterCartItemsTotalCount\n} from \"../../redux/cart/cart.selectors\";\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button.component';\nimport CheckoutItem from \"../../components/checkout-item/checkout-item.component\";\nimport \"./checkout.style.scss\";\n\nconst CheckoutComponent = () => {\n  const { cartItems, total } = useSelector(\n    createStructuredSelector({\n      cartItems: selecterCartItems,\n      total: selecterCartItemsTotalCount\n    })\n  );\n\n  return (\n    <div className=\"checkout-page\">\n      <div className=\"checkout-header\">\n        <div className=\"header-block\">Product</div>\n        <div className=\"header-block\">Description</div>\n        <div className=\"header-block\">Quantity</div>\n        <div className=\"header-block\">Price</div>\n        <div className=\"header-block\">Remove</div>\n      </div>\n      {cartItems.map(cartItem => (\n        <CheckoutItem key={cartItem.id} cartItem={cartItem} />\n      ))}\n      <div className=\"total\">${total}</div>\n      <div className=\"note\">\n        Example\n        <br />\n        Number: 4242 4242 4242 4242, Exp: 01/22, CVV: 123\n      </div>\n      <StripeCheckoutButton price={total} />\n    </div>\n  );\n};\n\nexport default CheckoutComponent;\n"],"sourceRoot":""}